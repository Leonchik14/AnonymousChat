package app

import (
	"google.golang.org/grpc/credentials/insecure"
	"log"
	"os"

	"matchmaking-service/internal/grpc/chatpb"
	"matchmaking-service/internal/handler"
	"matchmaking-service/internal/repository"
	"matchmaking-service/internal/service"

	"github.com/gofiber/fiber/v2"
	"github.com/joho/godotenv"
	"github.com/redis/go-redis/v9"
	"google.golang.org/grpc"
)

// App - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
type App struct {
	FiberApp *fiber.App
}

func NewApp() *App {
	// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
	if err := godotenv.Load(); err != nil {
		log.Println("‚ö†Ô∏è .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
	}

	// üîπ –ß–∏—Ç–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	redisHost := os.Getenv("REDIS_HOST")
	redisPort := os.Getenv("REDIS_PORT")
	chatServiceHost := os.Getenv("CHAT_SERVICE_HOST")
	chatServicePort := os.Getenv("CHAT_SERVICE_PORT")
	// üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º Redis
	redisClient := redis.NewClient(&redis.Options{
		Addr: redisHost + ":" + redisPort,
	})
	redisRepo := repository.NewRedisRepository(redisClient)

	chatConn, err := grpc.NewClient(chatServiceHost+":"+chatServicePort, grpc.WithTransportCredentials(insecure.NewCredentials())) // gRPC –∫–ª–∏–µ–Ω—Ç
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ chat-service: %v", err)
	}
	chatClient := chatpb.NewChatServiceClient(chatConn) // –°–æ–∑–¥–∞–µ–º gRPC-–∫–ª–∏–µ–Ω—Ç

	// üîπ –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
	matchmakingService := service.NewMatchmakingService(redisRepo, chatClient)

	// üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä
	app := fiber.New()
	matchmakingHandler := handler.NewMatchmakingHandler(matchmakingService)

	// üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
	app.Get("api/matchmaking/start", matchmakingHandler.StartMatchmaking)

	return &App{
		FiberApp: app,
	}
}

// Run - –∑–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞
func (a *App) Run() {
	port := os.Getenv("APP_PORT")
	if port == "" {
		port = "8081"
	}

	log.Printf("üöÄ Matchmaking Service –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É %s", port)
	log.Fatal(a.FiberApp.Listen(":" + port))
}
