package handler

import (
	"context"
	"log"
	"net/http"
	"strconv"

	"github.com/gofiber/fiber/v2"
	"matchmaking-service/internal/service"
)

// MatchmakingHandler - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
type MatchmakingHandler struct {
	matchmakingService *service.MatchmakingService
}

// NewMatchmakingHandler - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
func NewMatchmakingHandler(matchmakingService *service.MatchmakingService) *MatchmakingHandler {
	return &MatchmakingHandler{matchmakingService: matchmakingService}
}

// StartMatchmaking - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
func (h *MatchmakingHandler) StartMatchmaking(c *fiber.Ctx) error {
	// –ü–æ–ª—É—á–∞–µ–º userID –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏–ª–∏ —Ç–æ–∫–µ–Ω–∞)
	userIDStr := c.Get("X-User-ID") // –ö–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ "X-User-ID"
	if userIDStr == "" {
		return c.Status(http.StatusUnauthorized).JSON(fiber.Map{"error": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å X-User-ID"})
	}

	userID, err := strconv.ParseInt(userIDStr, 10, 64)
	if err != nil {
		return c.Status(http.StatusBadRequest).JSON(fiber.Map{"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç X-User-ID"})
	}

	log.Printf("üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %d –Ω–∞—á–∞–ª –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...", userID)

	// –ò—â–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
	err = h.matchmakingService.FindMatch(context.Background(), userID)
	if err != nil {
		return c.Status(http.StatusInternalServerError).JSON(fiber.Map{"error": err.Error()})
	}

	// –û—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
	return c.JSON(fiber.Map{"message": "–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ."})
}
